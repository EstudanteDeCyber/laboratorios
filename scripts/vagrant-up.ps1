param (
    [string]$VagrantArgs = "up" # COMANDO PADRAO √â "VAGRANT UP"
)

# ‚öôÔ∏è FUNCAO: DEFINE O VAGRANTFILE BASEADO NO PADR√ÉO Vagrantfile_*
function Set-VagrantfileEnv {
    $Vagrantfile = Get-ChildItem -Path . -Filter "Vagrantfile_*" | Select-Object -First 1
    if ($null -eq $Vagrantfile) {
        Write-Host "‚ùå NENHUM VAGRANTFILE_* ENCONTRADO NO DIRET√ìRIO ATUAL." -ForegroundColor Red
        exit 1
    }
    $env:VAGRANT_VAGRANTFILE = $Vagrantfile.Name
    Write-Host "‚úÖ VAGRANT_VAGRANTFILE DEFINIDO COMO: $($env:VAGRANT_VAGRANTFILE)"
}

# ‚öôÔ∏è FUN√á√ÉO: EXECUTA O SCRIPT pos_install_<SUFIXO>.ps1 BASEADO NO VAGRANTFILE
function Run-PostInstallScript {
    if (-not $env:VAGRANT_VAGRANTFILE) {
        Write-Host "‚ùå VAGRANT_VAGRANTFILE N√ÉO EST√Å DEFINIDO." -ForegroundColor Red
        exit 1
    }

    if ($env:VAGRANT_VAGRANTFILE -match "^Vagrantfile_(.+)$") {
        $Suffix = $Matches[1]
        $ScriptName = "pos_install_${Suffix}.ps1"
        $ScriptPath = Join-Path -Path $RootScriptsPath -ChildPath $ScriptName

        Write-Host "EXECUTANDO $ScriptName..."

        if (-not (Test-Path $ScriptPath)) {
            Write-Host "‚ùå SCRIPT $ScriptName N√ÉO ENCONTRADO EM $ScriptPath." -ForegroundColor Red
            exit 1
        }

        powershell -NoProfile -ExecutionPolicy Bypass -File $ScriptPath

        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå ERRO AO EXECUTAR $ScriptName." -ForegroundColor Red
            exit $LASTEXITCODE
        }

        Write-Host "‚úÖ $ScriptName EXECUTADO COM SUCESSO." -ForegroundColor Green
    } else {
        Write-Host "‚ùå NOME DO VAGRANTFILE N√ÉO SEGUE O PADR√ÉO ESPERADO." -ForegroundColor Red
        exit 1
    }
}

# üìÇ OBT√âM A PASTA ATUAL DO PROJETO
$ProjectPath = (Get-Location).Path

# üìÇ DEFINE O CAMINHO DA PASTA SCRIPTS (UM N√çVEL ACIMA DO PROJETO)
$RootScriptsPath = Join-Path -Path (Split-Path $ProjectPath -Parent) -ChildPath "scripts"

# ‚úÖ VALIDA A EXIST√äNCIA DA PASTA DE SCRIPTS
if (-not (Test-Path $RootScriptsPath)) {
    Write-Host "‚ùå DIRET√ìRIO DE SCRIPTS N√ÉO ENCONTRADO: $RootScriptsPath" -ForegroundColor Red
    exit 1
} else {
    Write-Host "‚úÖ Usando scripts em: $RootScriptsPath"
}

# ‚öôÔ∏è DEFINE O VAGRANTFILE AUTOMATICAMENTE
Set-VagrantfileEnv

# üóÉÔ∏è DEFINE DIRET√ìRIO PADR√ÉO DE BOXES DO VAGRANT
$env:VAGRANT_HOME = "D:\VMs\VirtualBox\Boxes"

# üíæ SALVA O MACHINEFOLDER ATUAL DO VIRTUALBOX (S√ì EXIBE)
$OriginalMachineFolder = (& VBoxManage list systemproperties | Select-String "Default machine folder").ToString().Split(":", 2)[1].Trim()
Write-Host "MACHINE FOLDER ATUAL: $OriginalMachineFolder"
Write-Host "DEFININDO MACHINEFOLDER TEMPOR√ÅRIO PARA: $ProjectPath"

# üîÅ SETA O MACHINEFOLDER PARA A PASTA DO PROJETO
VBoxManage setproperty machinefolder "$ProjectPath"

# VAI PARA A PASTA DO PROJETO
Push-Location $ProjectPath

# EXECUTA O COMANDO VAGRANT COM OS ARGUMENTOS FORNECIDOS
$ArgList = $VagrantArgs.Split(" ")
Write-Host "RODANDO: vagrant $VagrantArgs"
& vagrant @ArgList

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå ERRO AO EXECUTAR 'vagrant $VagrantArgs'. VERIFIQUE OS LOGS PARA DETALHES."
    Pop-Location
    Write-Host "RESTAURANDO MACHINEFOLDER PARA: D:\VMs\VirtualBox"
    VBoxManage setproperty machinefolder "D:\VMs\VirtualBox"
    exit $LASTEXITCODE
}

# üöÄ EXECUTA SCRIPT DE POS-INSTALA√á√ÉO APENAS SE O COMANDO FOR "UP"
if ($VagrantArgs -eq "up" -or $VagrantArgs -eq "") {
    Run-PostInstallScript
} else {
    Write-Host "‚ÑπÔ∏è PULANDO EXECU√á√ÉO DE pos_install.ps1, POIS O COMANDO N√ÉO √â 'UP'."
}

# VOLTA PARA O LOCAL ORIGINAL
Pop-Location

# üîÑ RESTAURA O MACHINEFOLDER PADR√ÉO DO VIRTUALBOX
Write-Host "RESTAURANDO MACHINEFOLDER PARA: D:\VMs\VirtualBox"
VBoxManage setproperty machinefolder "D:\VMs\VirtualBox"
