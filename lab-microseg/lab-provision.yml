- hosts: lab
  become: yes
  vars:
    install_cni: "calico"   # opções: calico, cilium, none
    use_k3s: false          # se true, instala k3s; se false, usa kind
    kind_version: "v0.20.0"

  tasks:
    - name: Garantir que não estamos rodando no lab-controller
      assert:
        that: "'lab-controller' not in inventory_hostname"
        fail_msg: "❌ Tentativa de provisionar o lab-controller! Abortando."
        success_msg: "✔️ Host válido para provisionamento: {{ inventory_hostname }}"

    - name: Atualizar cache apt
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Instalar pacotes base
      apt:
        name:
          - curl
          - wget
          - git
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
          - build-essential
          - python3-pip
          - openvswitch-switch
          - nftables
          - docker.io
          - conntrack
        state: present

    - name: Ativar e iniciar Docker
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Adicionar vagrant ao grupo docker
      user:
        name: vagrant
        groups: docker
        append: yes

    - name: Configurar sysctl para Kubernetes
      sysctl:
        name: net.bridge.bridge-nf-call-iptables
        value: 1
        state: present
        reload: yes

    - name: Garantir serviço nftables ativo
      systemd:
        name: nftables
        enabled: yes
        state: started

    - name: Copiar scripts do lab
      copy:
        src: files/scripts/
        dest: /opt/lab/scripts/
        mode: '0755'

- hosts: lab-master
  become: yes
  tasks:
    - name: Instalar kind (se não usar k3s)
      when: not use_k3s
      get_url:
        url: "https://kind.sigs.k8s.io/dl/{{ kind_version }}/kind-linux-amd64"
        dest: /usr/local/bin/kind
        mode: '0755'

    - name: Criar cluster kind (se não usar k3s)
      when: not use_k3s
      shell: |
        cat <<EOF > /tmp/kind-config.yaml
        kind: Cluster
        apiVersion: kind.x-k8s.io/v1alpha4
        nodes:
        - role: control-plane
        - role: worker
        - role: worker
        networking:
          disableDefaultCNI: true
          podSubnet: 192.168.0.0/16
        EOF
        kind create cluster --config /tmp/kind-config.yaml --name microseg-lab
      args:
        creates: /root/.kube/config

    - name: Instalar k3s (se configurado)
      when: use_k3s
      shell: curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.26.0+k3s1" sh -
      args:
        creates: /usr/local/bin/k3s

    - name: Instalar Calico (se selecionado)
      when: install_cni == 'calico'
      shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      args:
        warn: false

    - name: Instalar Cilium (se selecionado)
      when: install_cni == 'cilium'
      shell: |
        helm repo add cilium https://helm.cilium.io/
        helm repo update
        helm install cilium cilium/cilium --version 1.14.0 \
          --namespace kube-system --create-namespace
      args:
        warn: false

    - name: Reiniciar Docker
      systemd:
        name: docker
        state: restarted