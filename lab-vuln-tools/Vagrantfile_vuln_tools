# -*- mode: ruby -*-
# vi: set ft=ruby :

# helper para setar grupo no VirtualBox
def set_vbox_group(node, group_path)
  node.vm.provider "virtualbox" do |vb|
    vb.customize ["modifyvm", :id, "--groups", group_path]  # "--groups" com 's'
  end
end

Vagrant.configure("2") do |config|
  #####################################################################
  ## Para rodar capturando os outputs:
  ## vagrant up | Tee-Object -FilePath "vagrant_output.log" -Append
  #####################################################################

  config.vm.synced_folder '.', '/vagrant', disabled: true
  config.vm.boot_timeout = 900

  # todas as VMs deste arquivo vão para /LAB-VULN-TOOLS
  GROUP_MAP = {
    "Docker-Tools" => "/LAB-VULN-TOOLS",
    "Kali"         => "/LAB-VULN-TOOLS",
    "Docker-Vuln"  => "/LAB-VULN-TOOLS",
    "Metasploitable2"        => "/LAB-VULN-TOOLS",
    "Metasploitable3"        => "/LAB-VULN-TOOLS",
    "Meta3-Win"    => "/LAB-VULN-TOOLS",
  }

  # ===================================================================
  #  VM Docker TOOLS - 10.10.10.101
  # ===================================================================
  config.vm.define "Docker-Tools" do |node|
    node.vm.box = "debian/bookworm64"
    node.vm.hostname = "Docker-Tools"

    node.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = 4096
      vb.cpus = 1
      vb.name = "Docker-Tools"
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end

    # grupo
    set_vbox_group(node, GROUP_MAP["Docker-Tools"])

    node.vm.provision "shell", inline: <<-SHELL
      wget -O /tmp/provisionamento_docker_tools.sh https://raw.githubusercontent.com/EstudanteDeCyber/laboratorios/main/scripts/provisionamento_docker_tools.sh
      chmod +x /tmp/provisionamento_docker_tools.sh
      bash /tmp/provisionamento_docker_tools.sh
    SHELL
  end

  # ===================================================================
  #  VM Kali Linux - 10.10.10.10
  # ===================================================================
  config.vm.define "Kali" do |kali|
    kali.vm.box = "kalilinux/rolling"
    kali.vm.hostname = "kali"

    kali.vm.provider "virtualbox" do |vb|
      vb.gui = true
      vb.name = "Kali"
      vb.memory = "4096"
      vb.cpus = 2
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end

    # grupo
    set_vbox_group(kali, GROUP_MAP["Kali"])

    kali.vm.provision "shell", inline: <<-SHELL
      wget -O /tmp/provisionamento_kali.sh https://raw.githubusercontent.com/EstudanteDeCyber/laboratorios/refs/heads/main/scripts/provisionamento_kali.sh
      chmod +x /tmp/provisionamento_kali.sh
      /tmp/provisionamento_kali.sh
    SHELL
  end

  # ===================================================================
  #  VM Docker VULN - 10.10.10.102
  # ===================================================================
  config.vm.define "Docker-Vuln" do |node|
    node.vm.box = "debian/bookworm64"
    node.vm.hostname = "Docker-Vuln"

    node.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.memory = 4096
      vb.cpus = 1
      vb.name = "Docker-Vuln"
      vb.customize ["modifyvm", :id, "--uart1", "0x3F8", "4"]
      vb.customize ["modifyvm", :id, "--uartmode1", "file", File::NULL]
    end

    # grupo
    set_vbox_group(node, GROUP_MAP["Docker-Vuln"])

    node.vm.provision "shell", inline: <<-SHELL
      wget -O /tmp/provisionamento_docker_vuln.sh https://raw.githubusercontent.com/EstudanteDeCyber/laboratorios/main/scripts/provisionamento_docker_vuln.sh
      chmod +x /tmp/provisionamento_docker_vuln.sh
      bash /tmp/provisionamento_docker_vuln.sh
    SHELL
  end

  # ===================================================================
  #  metasploitable3 LINUX - 10.10.10.30
  #  https://github.com/rapid7/metasploitable3
  # ===================================================================
  config.vm.define "Meta3" do |meta3|
    meta3.vm.box = "rapid7/metasploitable3-ub1404"
    meta3.vm.hostname = "metasploitable3"
    meta3.ssh.username = 'vagrant'
    meta3.ssh.password = 'vagrant'

    meta3.vm.provider "virtualbox" do |vb|
      vb.name = "Metasploitable3"
      vb.memory = 2048
      vb.cpus = "1"
    end

    meta3.vm.provision "shell", inline: <<-SHELL
      # Ajustar Placa de REDE para o IP específico
      cp /etc/network/interfaces /etc/network/interfaces.bak || true
      cat << 'EONET' > /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
address 10.10.10.30
netmask 255.255.255.0
EONET
    SHELL
  end

  # ===================================================================
  #  metasploitable3 WINDOWS 10.10.10.40
  #  https://github.com/rapid7/metasploitable3
  # ===================================================================
  config.vm.define "Meta3-Win" do |meta3Win|
    # Base configuration for the VM and provisioner
    meta3Win.vm.box = "rapid7/metasploitable3-win2k8"
    meta3Win.vm.hostname = "Meta3-Win"
    meta3Win.vm.communicator = "winrm"
    meta3Win.winrm.retry_limit = 60
    meta3Win.winrm.retry_delay = 10
    meta3Win.vm.network "private_network",
                        ip: "10.10.10.40",
                        netmask: "255.255.255.0",
                        virtualbox__intnet: "EngRev_Malware_VulnLab"

    meta3Win.vm.provider "virtualbox" do |vb|
      vb.name = "Meta3-Win"
      vb.memory = 4096
      vb.cpus = 2
    end

    # Configure Firewall to open up vulnerable services
    case ENV['MS3_DIFFICULTY']
    when 'easy'
      meta3Win.vm.provision :shell, inline: "C:\\startup\\disable_firewall.bat"
    else
      meta3Win.vm.provision :shell, inline: "C:\\startup\\enable_firewall.bat"
      meta3Win.vm.provision :shell, inline: "C:\\startup\\configure_firewall.bat"
    end

    # Insecure share from the Linux machine
    meta3Win.vm.provision :shell, inline: "C:\\startup\\install_share_autorun.bat"
    meta3Win.vm.provision :shell, inline: "C:\\startup\\setup_linux_share.bat"
    meta3Win.vm.provision :shell, inline: "rm C:\\startup\\*" # Cleanup startup scripts

    meta3Win.vm.provision "shell", inline: <<-POWERSHELL
      netsh advfirewall firewall add rule name="Allow ICMPv4-In" protocol=1 dir=in action=allow enable=yes profile=any
      netsh advfirewall firewall add rule name="Allow ICMPv4-Out" protocol=1 dir=out action=allow enable=yes profile=any
    POWERSHELL
  end
  
  # ===================================================================
  #  metasploitable2 LINUX  - 10.10.10.20
  #  https://github.com/deargle/lab-metasploitable2
  # ===================================================================
  config.vm.define "Meta2" do |meta2|
    meta2.vm.box = "mattglass/metasploitable2-PS"
    meta2.vm.hostname = "metasploitable2"

    meta2.vm.provider "virtualbox" do |vb|
      vb.name = "Metasploitable2"
      vb.memory = "512"
      vb.cpus = "1"
    end

    meta2.vm.provision "shell", inline: <<-SHELL
      # Ajustar Placa de REDE para o IP específico
      cp /etc/network/interfaces /etc/network/interfaces.bak || true
      cat << 'EONET' > /etc/network/interfaces
auto lo
iface lo inet loopback

auto eth0
iface eth0 inet static
address 10.10.10.20
netmask 255.255.255.0
EONET
    SHELL
  end  
end